pipeline {
    agent any

    environment {
        // Definiere hier ggf. Umgebungsvariablen
        DOCKER_BUILDKIT = "1"
    }

    stages {
        stage('Checkout') {
            steps {
                // Hole den aktuellen Stand aus dem Git-Repo (automatisch bei Multibranch-Pipeline)
                checkout scm
            }
        }

        stage('Build Images') {
            steps {
                sh 'docker-compose build'
            }
        }

        stage('Start Services') {
            steps {
                sh 'docker-compose up -d'
            }
        }

        // Optional: Integrationstests
        stage('Test') {
            steps {
                // Hier Testcommands, z.B.:
                // sh 'curl http://localhost:3000/health'
                // sh 'curl http://localhost:8080'
                echo 'You can add API or UI tests here...'
            }
        }

        stage('Shutdown') {
            steps {
                sh 'docker-compose down'
            }
        }
    }

    post {
        always {
            // Stellt sicher, dass Compose-Container am Ende abger√§umt werden
            sh 'docker-compose down || true'
        }
    }
}