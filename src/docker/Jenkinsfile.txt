node {
    // ... (deine env-Variablen und checkout scm)

    withEnv(['HOME=.']) {
        docker.image('docker:24-dind').withRun('-p 2375:2375 --privileged -e DOCKER_TLS_CERTDIR=""') { c ->
            // ... (Dind-Daemon readiness check)

            docker.image("${env.DOCKER_IMAGE_CLI}").inside("--link ${c.id}:docker --privileged -u root") {
                // Die globale 'export DOCKER_HOST' Zeile entfernen oder auskommentieren,
                // da wir den Host jetzt explizit bei jedem Befehl angeben.
                // sh "export DOCKER_HOST=tcp://docker:2375" // <-- DIESE ZEILE ENTFERNEN ODER AUSKOMMENTIEREN

                stage ('Build Application Images') {
                    script {
                        echo "Building Frontend React Image..."
                        // Explizite Angabe des DOCKER_HOST für den docker build Befehl
                        sh """
                            DOCKER_HOST=tcp://docker:2375 docker build -t ${env.FRONTEND_IMAGE_NAME}:${env.BUILD_NUMBER} -t ${env.FRONTEND_IMAGE_NAME}:latest -f src/frontend_react/Dockerfile.example src/frontend_react/
                        """

                        echo "Building Backend Flask Image..."
                        // Explizite Angabe des DOCKER_HOST für den docker build Befehl
                        sh """
                            DOCKER_HOST=tcp://docker:2375 docker build -t ${env.BACKEND_IMAGE_NAME}:${env.BUILD_NUMBER} -t ${env.BACKEND_IMAGE_NAME}:latest -f src/backend_flask/Dockerfile.example src/backend_flask/
                        """
                        // Explizite Angabe des DOCKER_HOST für den docker images Befehl
                        sh "DOCKER_HOST=tcp://docker:2375 docker images"
                    }
                }

                stage ('Push Application Images') {
                    script {
                        echo "Pushing Frontend React Image..."
                        // Explizite Angabe des DOCKER_HOST für den docker push Befehl
                        sh "DOCKER_HOST=tcp://docker:2375 docker push ${env.FRONTEND_IMAGE_NAME}:${env.BUILD_NUMBER}"
                        sh "DOCKER_HOST=tcp://docker:2375 docker push ${env.FRONTEND_IMAGE_NAME}:latest"

                        echo "Pushing Backend Flask Image..."
                        sh "DOCKER_HOST=tcp://docker:2375 docker push ${env.BACKEND_IMAGE_NAME}:${env.BUILD_NUMBER}"
                        sh "DOCKER_HOST=tcp://docker:2375 docker push ${env.BACKEND_IMAGE_NAME}:latest"
                    }
                }

                stage ('Upload to IEM and Deploy to Edge Device') {
                    script {
                        sh """
                            cp -RT src/docker/app /app/src/workspace
                            cd /app/src/workspace

                            # Hier ist es wichtig, dass der ie-app-publisher-linux den DOCKER_HOST Parameter
                            # selbst über den -u Parameter bekommt, wie du es bereits hast.
                            # Wenn er intern weitere 'docker' Befehle ausführt, die nicht den -u Parameter bekommen,
                            # könnte es hier wieder zu Problemen kommen. Aber dein aktueller Befehl ist korrekt.
                            ie-app-publisher-linux de c -u http://docker:2375
                            export IE_SKIP_CERTIFICATE=true
                            ie-app-publisher-linux em li -u "$IEM_URL" -e "$USER_NAME" -p "$PSWD"

                            ie-app-publisher-linux em app cuv \\
                                -a "$APP_ID" \\
                                -v "0.0.${env.BUILD_NUMBER}" \\
                                -y "./docker-compose.yml" \\
                                -n '[{"name":"frontend","protocol":"HTTP","port":"80","headers":"","rewriteTarget":"/","route":"/"}, {"name":"backend","protocol":"HTTP","port":"5000","headers":"","rewriteTarget":"/api/","route":"/api/"}]' \\
                                -s "my-edge-app" \\
                                -t "FromBoxReverseProxy" \\
                                -u "my-edge-app" \\
                                -r "/"

                            ie-app-publisher-linux em app uuv -a "$APP_ID" -v "0.0.${env.BUILD_NUMBER}"
                        """
                        echo "Application uploaded to IEM. Waiting for deployment to Edge Device..."
                        sleep 120
                    }
                }
            }
        }
    }
}