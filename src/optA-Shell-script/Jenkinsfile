node {

    //Set Absolute Path to src files here
    env.PROJECT_PATH_PREFIX="src/optA-Shell-script"


    checkout scm
    withEnv(['HOME=.']) {          
                stage ('Build') {
                    sh """
                        cd "$PROJECT_PATH_PREFIX/app"
                        docker-compose build
                    """
                }
                
                stage('Upload to IEM and deploy on Device') {
                    sh """
                    # A flag for bash scripts to exit on error
                    set -e
                    set -x

                    # Set environment variables
                    export IE_SKIP_CERTIFICATE=true
                    export EDGE_SKIP_TLS=1

                    echo "----- Set publisher configuration ------"
                    iectl config add publisher --name "iemdev" --dockerurl "http://docker:2375" --workspace "."

                    echo "----- Prepare workspace ------"
                    rm -rf workspace
                    iectl publisher workspace init

                    #echo "----- Copy app files -----"
                    cp -RT $PROJECT_PATH_PREFIX/app ./workspace

                    echo "----- Create new app version ------"
                    # I have used BUILD_NUMBER from Jenkins to create versions. If the apps are being deployed differentley as well you would need to get the version via "app-details" \
                    iectl publisher standalone-app create \
                        --appname "$APP_NAME" \
                        --changelogs "REEEEEEEEEEEEEE" \
                        --yamlpath "$PROJECT_PATH_PREFIX/app/docker-compose.prod.yml" \
                        --versionnumber "0.0.${BUILD_NUMBER}" \
                        -n '{"JenkinsCICD-Demo":[{"name":"JenkinsCICD-Demo","protocol":"HTTP","port":"80","headers":"","rewriteTarget":"/"}]}' \
                        -s 'JenkinsCICD-Demo' \
                        -t 'FromBoxReverseProxy' \
                        -u 'JenkinsCICD-Demo' \
                        -r '/'

                    echo "----- IEM Login ------"
                    iectl config add iem \
                        --name 'iemdev' \
                        --url "$IEM_URL" \
                        --user "$USER_NAME" \
                        --password "$PSWD"

                    echo "----- Upload to the catalog ------"
                    iectl publisher app-project upload catalog \
                        --appname $APP_NAME \
                        -v "0.0.${BUILD_NUMBER}"

                    echo "----- Deploy on edge device ------"
                    iectl iem app-project install \
                        -a "$APP_NAME" \
                       --version "0.0.${BUILD_NUMBER}" \
                        -i '{"devices":["'"$EDGE_DEVICE_ID"'"]}'    





                    #echo "----- Create new app version ------"
                    # I have used BUILD_NUMBER from Jenkins to create versions. If the apps are being deployed differentley as well you would need to get the version via "app-details" \
                    #iectl publisher app-project version create \
                    #    -a "$APP_ID" \
                    #    -v "0.0.${BUILD_NUMBER}" \
                    #    -y "$PROJECT_PATH_PREFIX/app/docker-compose.prod.yml" \
                    #    -n '{"JenkinsCICD-Demo":[{"name":"JenkinsCICD-Demo","protocol":"HTTP","port":"80","headers":"","rewriteTarget":"/"}]}' \
                    #    -s 'JenkinsCICD-Demo' \
                    #    -t 'FromBoxReverseProxy' \
                    #    -u 'JenkinsCICD-Demo' \
                    #   -r '/'                
                    """
                }

                stage('Cleanup Docker') {
                    sh '''
                    docker ps -a | grep docker:24-dind | awk \'{print $1}\' | xargs -r docker rm -f
                    docker system prune -af || true
                    docker images -f "dangling=true" -q | xargs --no-run-if-empty docker rmi || true
                    '''
                }
    }        
 }