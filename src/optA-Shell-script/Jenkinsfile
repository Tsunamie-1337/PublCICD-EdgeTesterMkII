node {
    checkout scm
    withEnv(['HOME=.']) {          
                stage ('Build') {
                    sh """
                        cd src/optA-Shell-script/app  #FIX change back later to src/app
                        docker-compose build
                    """
                }
                
                stage('Upload to IEM and deploy on Device') {
                    sh '''
                    # A flag for bash scripts to exit on error
                    set -e

                    # Set Variables
                    # Most Variables were set in Jenkins under Environment Variables
                    #APP_ID="$APP_ID"          # Numeric ID of the App being deployed
                    #APP_NAME="$APP_NAME"   # Name of the App being deployed

                    echo "----- Prepare workspace ------"
                    rm -rf workspace
                    mkdir workspace
                    cp -RT src/optA-Shell-script/app ./workspace #FIX change back later to src/app
                    #debug info
                    ls -la ./workspace
                    #debug info end
                    cd workspace

                    # debug info
                    pwd
                    ls -la
                    # debug info end

                    echo "----- Set publisher configuration ------"
                    # iectl config add publisher --name "iemdev" --dockerurl "http://docker:2375" --workspace "./workspace" #FIX change back later to ./workspace
                    iectl config add publisher --name "iemdev" --dockerurl "http://docker:2375" --workspace "."

                    echo "----- IEM Login ------"
                    export IE_SKIP_CERTIFICATE=true
                    export EDGE_SKIP_TLS=1
                    iectl config add iem --name 'iemdev' --url "$IEM_URL" --user "$USER_NAME" --password "$PSWD"

                    echo "----- Create new app version ------"
                    # I have used BUILD_NUMBER from Jenkins to create versions. If the apps are being deployed differentley as well you would need to get the version via "app-details" \
                    # -y ./docker-compose.prod.yml \
                    iectl publisher app-project version create \
                        -a "$APP_ID" \
                        -v "0.0.${BUILD_NUMBER}" \
                        -y ./docker-compose.prod.yml \
                        -n '{"JenkinsCICD-Demo":[{"name":"JenkinsCICD-Demo","protocol":"HTTP","port":"80","headers":"","rewriteTarget":"/"}]}' \
                        -s 'JenkinsCICD-Demo' \
                        -t 'FromBoxReverseProxy' \
                        -u 'JenkinsCICD-Demo' \
                        -r '/'

                    echo "----- Deploy on edge device ------"
                    iectl iem app-project install \
                        -a "$APP_NAME" \
                        --version "0.0.${BUILD_NUMBER}" \
                        -i '{"devices":["'"$EDGE_DEVICE_ID"'"]}'                    
                    '''
                }

                stage('Cleanup Docker') {
                    sh '''
                    docker ps -a | grep docker:24-dind | awk \'{print $1}\' | xargs -r docker rm -f
                    docker system prune -af || true
                    docker images -f "dangling=true" -q | xargs --no-run-if-empty docker rmi || true
                    '''
                }
    }        
 }

